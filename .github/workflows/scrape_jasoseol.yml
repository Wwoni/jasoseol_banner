name: Scrape Jasoseol Banners

on:
  workflow_dispatch: {}
  schedule:
    # 매주 월요일 01:00 UTC 실행 = 한국시간(KST, UTC+9) 10:00
    - cron: "0 1 * * 1"

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write service account JSON
        env:
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          if [ -z "${GDRIVE_CREDENTIALS_JSON}" ]; then
            echo "::error::GDRIVE_CREDENTIALS_JSON secret is empty or not visible to this workflow."
            exit 1
          fi
          printf '%s' "$GDRIVE_CREDENTIALS_JSON" > gdrive_sa.json
          test -s gdrive_sa.json || (echo "::error::gdrive_sa.json is empty after write" && exit 1)
          head -n 2 gdrive_sa.json || true

      # Playwright: 파이썬 패키지 + 브라우저 + 리눅스 의존성 설치
      - name: Install Playwright
        run: |
          pip install playwright
          python - <<'PY'
          import sys, subprocess
          # gdrive 업로드용 라이브러리 보강
          try:
              import googleapiclient  # noqa
          except ImportError:
              subprocess.check_call([sys.executable, "-m", "pip", "install",
                                     "google-api-python-client", "google-auth", "google-auth-httplib2"])
          PY
          # 브라우저 바이너리 및 필수 OS 라이브러리 설치
          python - <<'PY'
          import subprocess
          subprocess.check_call(["playwright", "install", "chromium"])
          try:
              # 리눅스 필수 deps (없으면 스크린샷/렌더 실패 가능)
              subprocess.check_call(["npx", "--yes", "playwright", "install-deps"])
          except Exception:
              pass
          PY

      # (선택) 폴더 접근 사전검증 - 파일 인증 사용
      - name: Verify Drive folder access
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          python - <<'PY'
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          creds = service_account.Credentials.from_service_account_file(
              "gdrive_sa.json", scopes=["https://www.googleapis.com/auth/drive"]
          )
          svc = build("drive","v3",credentials=creds)
          meta = svc.files().get(fileId="${{ secrets.GDRIVE_FOLDER_ID }}",
                                 fields="id,name,driveId,mimeType",
                                 supportsAllDrives=True).execute()
          print("Folder OK:", meta)
          PY

      - name: Run crawler & upload
        env:
          # 파이썬 스크립트는 우선 GDRIVE_CREDENTIALS_JSON(문자열) → 없으면 gdrive_sa.json 파일을 사용
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          python jasoseol_banner.py

      - name: Upload artifacts (CSV only)
        uses: actions/upload-artifact@v4
        with:
          name: jasoseol_banner_outputs
          path: |
            jasoseol_banner.csv
          if-no-files-found: warn

      - name: Show script head (sanity)
        if: always()
        run: |
          sed -n '1,200p' jasoseol_banner.py
          echo "grep Drive 업로드 로그:"; grep -n "Drive 업로드" jasoseol_banner.py || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
           name: jasoseol_banner_outputs
           path: |
              jasoseol_banner.csv
              debug/*.html
              debug/*.jsonl
              debug/*.txt
