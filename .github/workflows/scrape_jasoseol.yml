name: Scrape Jasoseol Banners

on:
  workflow_dispatch: {}
  schedule:
    # 매주 월요일 01:00 UTC 실행 = 한국시간(KST, UTC+9) 오전(10:00)
    - cron: "0 1 * * 1"

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install -r requirements.txt      
      
      # requirements 설치 후
      - name: Write service account JSON
        env:
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          if [ -z "${GDRIVE_CREDENTIALS_JSON}" ]; then
            echo "::error::GDRIVE_CREDENTIALS_JSON secret is empty or not visible to this workflow."
           exit 1
          fi
          # JSON 원문을 파일로 저장
          printf '%s' "$GDRIVE_CREDENTIALS_JSON" > gdrive_sa.json
          # 존재/크기 점검
          test -s gdrive_sa.json || (echo "::error::gdrive_sa.json is empty after write" && exit 1)
          # (선택) 파일 상위 몇 줄 출력해보기
          head -n 2 gdrive_sa.json || true

      # (선택) 폴더 접근 사전검증
      - name: Verify Drive folder access
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          python - <<'PY'
          import os, json
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          raw = os.environ["GDRIVE_CREDENTIALS_JSON"]
          creds = service_account.Credentials.from_service_account_file(
              "gdrive_sa.json", scopes=["https://www.googleapis.com/auth/drive"]
          )
          svc = build("drive","v3",credentials=creds)
          meta = svc.files().get(fileId=os.environ["GDRIVE_FOLDER_ID"],
                           fields="id,name,driveId,mimeType",
                           supportsAllDrives=True).execute()
          print("Folder OK:", meta)
          PY

      # 실제 실행
      - name: Run crawler & upload
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}   # ← 파이썬이 이 경로를 읽도록
        run: |
          python jasoseol_banner.py

      # (옵션) 결과물/디버그 아티팩트 업로드
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jasoseol_banner_outputs
          path: |
            jasoseol_banner.csv
            last_run.txt

      # (옵션) 실행 파일에 업로드 코드가 있는지 바로 로그로 확인
      - name: Show script head (sanity)
        run: |
          sed -n '1,200p' jasoseol_banner.py
          echo "grep upload_to_drive:"; grep -n "upload_to_drive" jasoseol_banner.py || true
          echo "grep Drive 업로드 로그:"; grep -n "Drive 업로드" jasoseol_banner.py || true
            debug_home.html
            debug_next_data.json
          if-no-files-found: warn
